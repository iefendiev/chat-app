{"version":3,"sources":["components/Chat.js","context/ChatContext.js","components/Join.js","components/Message.js","components/Messages.js","App.js","reportWebVitals.js","index.js"],"names":["socket","ChatContext","createContext","Join","context","useContext","className","style","color","placeholder","onChange","e","setName","target","value","setRoom","onClick","name","room","preventDefault","to","type","Message","message","user","text","isSentByCurrentUser","trimmedName","trim","toLowerCase","ReactEmoji","emojify","Messages","messages","map","i","Chat","useState","setMessage","setMessages","usersInRoom","setUsersInRoom","search","useLocation","ENDPOINT","closeChat","useEffect","queryString","parse","io","transports","emit","error","on","users","sendMessage","onKeyPress","key","submitButton","fontSize","borderBottom","paddingBottom","id","App","Provider","path","exact","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.151d680e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport { useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport { XCircleIcon } from '@heroicons/react/solid';\nimport Messages from './Messages';\n\nlet socket;\n\nconst Chat = () => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [usersInRoom, setUsersInRoom] = useState([]);\n\n  const { search } = useLocation();\n  // console.log(name, room);\n  const ENDPOINT = 'https://iefendiev-chatapp-backend.herokuapp.com/';\n\n  const closeChat = () => {\n    return true;\n  };\n\n  const submitButton = (e) => {\n    e.preventDefault();\n    sendMessage(e);\n  };\n\n  useEffect(() => {\n    const { name, room } = queryString.parse(`${search}`);\n\n    socket = io(ENDPOINT, { transports: ['websocket'] });\n\n    setName(name);\n    setRoom(room);\n    // console.log(socket);\n\n    socket.emit('join', { name, room }, (error) => {\n      // alert(error);\n    });\n\n    // unmounting for useEffect\n    if (!closeChat()) {\n      return () => {\n        socket.emit('disconnect');\n        socket.off();\n      };\n    }\n  }, [ENDPOINT, search]);\n\n  useEffect(() => {\n    socket.on('message', (message) => {\n      setMessages((messages) => [...messages, message]);\n    });\n  }, []);\n\n  useEffect(() => {\n    socket.emit('showUsersInRoom', room, () => null);\n\n    socket.on('users', (users) => {\n      setUsersInRoom(() => users);\n    });\n  }, [messages]);\n  // console.log(usersInRoom);\n  // send message function\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  // console.log('message', message, 'messages', messages);\n\n  return (\n    <div className=\"chat-window\">\n      <form className=\"chat-field\">\n        <div className=\"close-wrapper\">\n          <div className=\"room-name\">Room: {room}</div>\n          <Link to=\"/\">\n            <XCircleIcon className=\"close-chat-button\" onClick={closeChat} />\n          </Link>\n        </div>\n        <Messages messages={messages} name={name}></Messages>\n        <div className=\"chat-bottom\">\n          <input\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n            placeholder=\"Type a message...\"\n            onKeyPress={(e) => (e.key === 'Enter' ? sendMessage(e) : null)}\n            className=\"message-input\"\n          />\n          <button\n            className=\"message-submit-button\"\n            type=\"submit\"\n            onClick={(e) => submitButton(e)}\n          >\n            Send\n          </button>\n        </div>\n      </form>\n      <div className=\"online-users\">\n        <h3\n          style={{\n            fontSize: '1.7rem',\n            borderBottom: '2px solid white',\n            paddingBottom: '0.5rem',\n          }}\n        >\n          Online Users\n        </h3>\n        {usersInRoom\n          ? usersInRoom.map((user) => <p key={user.id}>{user.name}</p>)\n          : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","import { createContext } from 'react';\n\nexport const ChatContext = createContext();\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ChatContext } from '../context/ChatContext';\n\nconst Join = () => {\n  const context = useContext(ChatContext);\n\n  return (\n    <form className=\"input-fields\">\n      <h1 style={{ color: 'white' }}>Join Chat Rooms</h1>\n      <input\n        placeholder=\"Name\"\n        onChange={(e) => context.setName(e.target.value)}\n      ></input>\n      <input\n        placeholder=\"Room\"\n        onChange={(e) => context.setRoom(e.target.value)}\n      ></input>\n      <Link\n        onClick={(e) =>\n          !context.name || !context.room ? e.preventDefault : null\n        }\n        to={`/chat?name=${context.name}&room=${context.room}`}\n      >\n        <button className=\"join-button\" type=\"submit\">\n          Start Chatting!\n        </button>\n      </Link>\n    </form>\n  );\n};\n\nexport default Join;\n","import React from 'react';\nimport ReactEmoji from 'react-emoji';\n\nconst Message = ({ message: { user, text }, name }) => {\n  // message was an object with user (with trimmed name) and text\n  let isSentByCurrentUser = false;\n\n  const trimmedName = name.trim().toLowerCase();\n\n  if (user === trimmedName) {\n    isSentByCurrentUser = true;\n  }\n\n  return isSentByCurrentUser ? (\n    <div className=\"messageContainer justifyEnd\">\n      <p className=\"sentText pr-10\">{trimmedName}</p>\n      <div className=\"messageBox backgroundBlue\">\n        <p className=\"messageText colorWhite\">{ReactEmoji.emojify(text)}</p>\n      </div>\n    </div>\n  ) : (\n    <div className=\"messageContainer justifyStart\">\n      <div className=\"messageBox backgroundLight\">\n        <p className=\"messageText colorDark\">{ReactEmoji.emojify(text)}</p>\n      </div>\n      <p className=\"sentText pl-10 \">{user}</p>\n    </div>\n  );\n};\n\nexport default Message;\n","import React from 'react';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport Message from './Message';\n\nconst Messages = ({ messages, name }) => {\n  // console.log(messages);\n  return (\n    <ScrollToBottom className=\"chat-screen\">\n      {messages.map((message, i) => (\n        <div key={i}>\n          <Message message={message} name={name} />\n        </div>\n      ))}\n    </ScrollToBottom>\n  );\n};\n\nexport default Messages;\n","import './App.css';\nimport React, { useState } from 'react';\nimport { ChatContext } from './context/ChatContext';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Join from './components/Join';\nimport Chat from './components/Chat';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <ChatContext.Provider value={{ name, setName, room, setRoom }}>\n          <Route path=\"/\" exact render={() => <Join />} />\n          <Route path=\"/chat\" render={() => <Chat />} />\n        </ChatContext.Provider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}